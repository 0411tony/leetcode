# -*- coding: utf-8 -*-
'''
题目： 最近的请求次数
写一个 RecentCounter 类来计算最近的请求。
它只有一个方法：ping(int t)，其中 t 代表以毫秒为单位的某个时间。
返回从 3000 毫秒前到现在的 ping 数。
任何处于 [t - 3000, t] 时间范围之内的 ping 都将会被计算在内，包括当前（指 t 时刻）的 ping。
保证每次对 ping 的调用都使用比之前更大的 t 值。

例如：
输入：inputs = ["RecentCounter","ping","ping","ping","ping"], inputs = [[],[1],[100],[3001],[3002]]
输出：[null,1,2,3,3]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/number-of-recent-calls
'''

'''
思路：
1.collections.deque() 函数：
deque 是双端队列的缩写，由于两端都能编辑，所以deque既可以用来实现栈，也可以用来实现队列
常见方法包括：
appendleft(): 在队列左端添加一个元素
extendleft(): 在队列左端添加一组元素
insert(index, x): 插入到指定位置
rotate():从尾部旋转到首部，或从首部旋转到尾部
append(): 在队列右端添加一个元素
extend(): 在队列右端添加一组元素
pop(): 弹出一个元素
count(): 计算队列元素数
'''

class RecentCounter:

    def __init__(self):
        self.q = collections.deque()

    def ping(self, t: int) -> int:
        self.q.append(t)
        while self.q[0] < t-3000:
            self.q.popleft()
        return len(self.q)
