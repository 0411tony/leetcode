# -*- coding: utf-8 -*-
'''
题目： 递归乘法
递归乘法。 写一个递归函数，不使用 * 运算符， 实现两个正整数的相乘。可以使用加号、减号、位移，但要吝啬一些。

输入：A = 1, B = 10
输出：10

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/all-possible-full-binary-trees

'''

'''
思路：
1. 判断哪个数字比较小，计算小数字次数的相加
'''
class Solution:
    def helper(self, A, B):
        if A == 1:
            return B
        else:
            return self.multiply(A-1, B) + B
    
    def multiply(self, A: int, B: int) -> int:
        if A == 0 or B == 0:
            return 0
        a = abs(A); b = abs(B)
        if a > b:
            a, b = b, a
        ans = self.helper(a, b)
        if (A < 0) ^ (B < 0):
            return -ans
        return ans
