# -*- coding: utf-8 -*-
'''
题目：二叉搜索树的范围和
给定二叉搜索树的根结点 root，返回 L 和 R（含）之间的所有结点的值的和。
二叉搜索树保证具有唯一的值。

例如：
输入：root = [10,5,15,3,7,null,18], L = 7, R = 15
输出：32

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/range-sum-of-bst/
'''

'''
思路：
题目细读：给定一棵树以及左右限定值，找到树中在左右限定值内的节点，返回这些节点的值
递归深度优先搜索：
1.判断节点值是否在左右限定值内，如果在的话，ans相加
2.如果树上节点值小于右限定值，就需要在该节点的右子树中搜索
3.如果树上节点值大于左限定值，就需要在该节点的左子树中搜索
'''
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def rangeSumBST(self, root: TreeNode, L: int, R: int) -> int:
        def dfs(node):
            if node:
                if node.val>=L and node.val<=R:
                    self.ans += node.val
                if node.val<R:
                    dfs(node.right)
                if node.val>L:
                    dfs(node.left)
            return self.ans
        self.ans = 0
        return dfs(root)
