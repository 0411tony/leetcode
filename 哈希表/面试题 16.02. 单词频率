# -*- coding: utf-8 -*-
'''
题目： 
设计一个方法，找出任意指定单词在一本书中的出现频率。

你的实现应该支持如下操作：

WordsFrequency(book)构造函数，参数为字符串数组构成的一本书
get(word)查询指定单词在书中出现的频率


例如：
WordsFrequency wordsFrequency = new WordsFrequency({"i", "have", "an", "apple", "he", "have", "a", "pen"});
wordsFrequency.get("you"); //返回0，"you"没有出现过
wordsFrequency.get("have"); //返回2，"have"出现2次
wordsFrequency.get("an"); //返回1
wordsFrequency.get("apple"); //返回1
wordsFrequency.get("pen"); //返回1

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/words-frequency-lcci
'''

class WordsFrequency:

    def __init__(self, book: List[str]):
        self.data = collections.Counter(book)


    def get(self, word: str) -> int:
        return self.data[word]

# Your WordsFrequency object will be instantiated and called as such:
# obj = WordsFrequency(book)
# param_1 = obj.get(word)
