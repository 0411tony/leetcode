# -*- coding: utf-8 -*-
'''
题目：面试题 02.03. 删除中间节点
实现一种算法，删除单向链表中间的某个节点（即不是第一个或最后一个节点），假定你只能访问该节点。
例如：
输入：单向链表a->b->c->d->e->f中的节点c
结果：不返回任何数据，但该链表变为a->b->d->e->f
来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/delete-middle-node-lcci/
'''

'''
思路：
1.判断如果删除的为最后一个节点
2.将下一个节点的值赋给删除节点，然后将要删除的节点的下一个节点删除
'''

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def deleteNode(self, node):
        """
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """
        if node.next == None:
            node = None
        temp = node.next
        node.val = temp.val
        node.next = temp.next
